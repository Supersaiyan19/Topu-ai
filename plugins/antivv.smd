const { smd, tlang, botpic, prefix, Config, bot_ } = require('../lib');

let bgmm = false;

// AntiViewOnce Command
smd({
    cmdname: 'antivv',
    alias: ['antivv'],
    desc: 'Turn on/off auto viewOnce downloader',
    fromMe: true,
    type: 'general',
    use: '<on/off>',
    filename: __filename
}, async (message, match) => {
    try {
        bgmm = await bot_.findOne({ id: 'bot_' + message.user }) || await bot_.new({ id: 'bot_' + message.user });
        let action = match.trim().split(' ')[0].toLowerCase();

        if (action === 'on' || action === 'enable' || action === 'act') {
            if (bgmm.antiviewonce === 'true') return await message.reply('*AntiViewOnce already enabled!*');
            await bot_.updateOne({ id: 'bot_' + message.user }, { antiviewonce: 'true' });
            return await message.reply('*AntiViewOnce successfully enabled*');
        } else if (action === 'off' || action === 'disable' || action === 'deact') {
            if (bgmm.antiviewonce === 'false') return await message.reply('*AntiViewOnce already disabled*');
            await bot_.updateOne({ id: 'bot_' + message.user }, { antiviewonce: 'false' });
            return await message.reply('*AntiViewOnce successfully deactivated*');
        } else {
            return await message.send('*_Use on/off to enable/disable antiViewOnce!_*');
        }
    } catch (error) {
        await message.error(error + '\n\nCommand: AntiViewOnce', error);
    }
});

// AntiViewOnce Media Download Handler
smd({ on: 'viewonce' }, async (message, match) => {
    try {
        if (!bgmm) bgmm = await bot_.findOne({ id: 'bot_' + message.user });
        if (bgmm && bgmm.antiviewonce && bgmm.antiviewonce === 'true') {
            let fakeMessage = {
                key: { ...message.key },
                message: { conversation: '```[VIEWONCE DETECTED] downloading!```' }
            };
            let media = await message.quoted.downloadAndSaveMediaMessage(message.quoted);
            const senderUsername = message.quoted.participant.split('@')[0];
            const sentTime = new Date(message.messageTimestamp * 1000).toLocaleString();
            const viewOnceDetails = `*Sender:* @${senderUsername}\n*Time Sent:* ${sentTime}\n*Original Chat:* ${message.from}`;
            
            await message.bot.sendMessage(message.sender, {
                [message.mtype.split('Message')[0]]: { url: media },
                caption: `${viewOnceDetails}\n\n${message.msg}`
            }, { quoted: fakeMessage, mentions: [message.quoted.participant] });
        }
    } catch (error) {
        console.log('Error while getting antiviewOnce media\n', error);
    }
});
